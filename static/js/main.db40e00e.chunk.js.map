{"version":3,"sources":["components/shared/Form.jsx","components/shared/Label.jsx","components/shared/Input.jsx","components/shared/Button.jsx","components/Notifications/checkInputBudget.jsx","components/BudgetForm/BudgetForm.jsx","components/redux/actions/actions.jsx","components/BudgetForm/BudgetFormContainer.jsx","components/Notifications/checkInputExpense.jsx","components/ExpenseFrom/ExpenseForm.jsx","components/redux/selectors/selectors.jsx","components/ExpenseFrom/ExpenseFormContainer.jsx","components/ExpensesTable/ExpensesTable.jsx","components/Stat/Stat.jsx","components/Values/Values.jsx","App.js","components/redux/reducers/reducer.jsx","components/redux/store/store.jsx","index.js"],"names":["StyledForm","styled","form","Form","onSubmit","children","StyledLabel","label","props","customStyles","Label","StyledInput","input","Input","type","onChange","name","StyledButton","button","Button","onClick","checkCorrectInput","inputValue","expenses","toast","warn","position","POSITION","TOP_RIGHT","error","BudgetForm","addBudget","e","preventDefault","currentInput","Number","target","querySelector","value","checkInputBudget","reset","Type","removeExpense","id","payload","connect","state","budget","store","expense","dispatch","actions","balance","ExpenseForm","addExpense","resultInput","shortid","generate","amount","checkInputExpense","getBudget","getExpenses","calculateTotalExpenses","createSelector","reduce","total","calculateBalance","selectors","Table","table","items","map","key","propTypes","PropTypes","func","arrayOf","any","Container","div","isPositive","p","Value","Stat","section","Values","totalExpenses","length","onRemove","combineReducers","action","filter","item","rootReducer","allReducers","createStore","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.db40e00e.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding: 16px;\n  width: 100%;\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nconst Form = ({ onSubmit = () => null, children }) => (\n  <StyledForm onSubmit={onSubmit}>{children}</StyledForm>\n);\n\nexport default Form;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledLabel = styled.label`\n  display: inline-block;\n  font-size: 20px;\n  color: #171718;\n  cursor: pointer;\n  ${props => props.customStyles}\n`;\n\nconst Label = ({ children, customStyles }) => (\n  <StyledLabel customStyles={customStyles}>{children}</StyledLabel>\n);\n\nexport default Label;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledInput = styled.input`\n  color: #171718;\n  font: inherit;\n  font-size: 1.2rem;\n  padding: 16px;\n  border-radius: 4px;\n  border: 1px solid #bdbdbd;\n  width: 100%;\n  outline: 0;\n\n  &:focus {\n    border: 1px solid #2b32b2;\n  }\n`;\n\nconst Input = ({ type = \" text\", onChange = () => null, name = \"\" }) => (\n  <StyledInput type={type} onChange={onChange} name={name} />\n);\n\nexport default Input;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledButton = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  color: #fff;\n  background-color: #3f51b5;\n  border: 0;\n  outline: 0;\n  padding: 8px 24px;\n  border-radius: 4px;\n  cursor: pointer;\n  box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.05);\n  font: inherit;\n  text-transform: uppercase;\n  user-select: none;\n\n  transition: background-color 200ms ease-in-out;\n\n  &:hover {\n    box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.15);\n    background-color: #303f9f;\n  }\n`;\n\nconst Button = ({ type = \"button\", label = \"\", onClick = () => null }) => (\n  <StyledButton type={type} onClick={onClick}>\n    {label}\n  </StyledButton>\n);\n\nexport default Button;\n","import { toast } from 'react-toastify';\n\nconst checkCorrectInput = (inputValue, expenses) => {\n  if (inputValue < 0) {\n    toast.warn(`Your budget can't be negative!`, {\n      position: toast.POSITION.TOP_RIGHT,\n    });\n    return false;\n  }\n  if (inputValue === 0) {\n    toast.warn('Add a budget!', {\n      position: toast.POSITION.TOP_RIGHT,\n    });\n    return false;\n  }\n  if (inputValue < expenses) {\n    toast.error(`Your budget can't be less then expenses!`, {\n      position: toast.POSITION.TOP_RIGHT,\n    });\n    return false;\n  }\n  return true;\n};\n\nexport default checkCorrectInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Form from '../shared/Form';\nimport Label from '../shared/Label';\nimport Input from '../shared/Input';\nimport Button from '../shared/Button';\nimport checkInputBudget from '../Notifications/checkInputBudget';\n\nconst labelStyles = `\n  margin-bottom: 16px;\n`;\n\nconst BudgetForm = ({ addBudget, expenses }) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n    const currentInput = Number(e.target.querySelector('input').value);\n\n    if (checkInputBudget(currentInput, expenses)) addBudget(currentInput);\n\n    e.target.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label customStyles={labelStyles}>\n        Enter your total budget\n        <Input type=\"number\" name=\"amount\" />\n      </Label>\n\n      <Button label=\"Save\" type=\"submit\" />\n    </Form>\n  );\n};\n\nBudgetForm.propTypes = {\n  addBudget: PropTypes.func.isRequired,\n  expenses: PropTypes.number,\n};\n\nexport default BudgetForm;\n","export const Type = {\n  ADD_BUDGET: 'ADD_BUDGET',\n  ADD_EXPENSE: 'ADD_EXPENSE',\n  REMOVE_EXPENSE: 'REMOVE_EXPENSE',\n};\n\nexport const addBudget = value => ({\n  type: Type.ADD_BUDGET,\n  payload: value,\n});\n\nexport const addExpense = value => ({\n  type: Type.ADD_EXPENSE,\n  payload: { name: value.name, amount: value.amount, id: '' },\n});\n\nexport const removeExpense = id => ({\n  type: Type.REMOVE_EXPENSE,\n  payload: id,\n});\n","import { connect } from \"react-redux\";\n// import * as plannerActions from '../../redux/planner/plannerActions';\nimport BudgetForm from \"./BudgetForm\";\nimport * as actions from \"../redux/actions/actions\";\n// import * as plannerSelectors from '../../redux/planner/plannerSelectors';\n\n// const mapStateToProps = state => ({\n//   expenses: plannerSelectors.calculateTotalExpenses(state),\n// });\n\n// const mapDispatchToProps = dispatch => ({\n//   onSave: value => dispatch(plannerActions.addBudget(value)),\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(BudgetForm);\n\nconst mapStateToProps = state => ({\n  budget: state.store.budget,\n  expense: state.store.expenses\n});\n\nconst mapDispatchProps = dispatch => ({\n  addBudget: value => dispatch(actions.addBudget(value))\n});\n\nexport default connect(mapStateToProps, mapDispatchProps)(BudgetForm);\n","import { toast } from 'react-toastify';\n\nconst checkCorrectInput = (inputValue, balance) => {\n  if (inputValue < 0) {\n    toast.warn(`The amount can't be negative!`, {\n      position: toast.POSITION.TOP_RIGHT,\n    });\n    return false;\n  }\n  if (inputValue === 0) {\n    toast.warn('Enter the amount for the operation!', {\n      position: toast.POSITION.TOP_RIGHT,\n    });\n    return false;\n  }\n  if (inputValue > balance) {\n    toast.error(\n      'There are not enough funds on the account to conduct the operation!',\n      {\n        position: toast.POSITION.TOP_RIGHT,\n      },\n    );\n    return false;\n  }\n  return true;\n};\n\nexport default checkCorrectInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport Form from '../shared/Form';\nimport Label from '../shared/Label';\nimport Input from '../shared/Input';\nimport Button from '../shared/Button';\nimport checkInputExpense from '../Notifications/checkInputExpense';\n\nconst labelStyles = `\n  margin-bottom: 16px;\n`;\n\nconst ExpenseForm = ({ addExpense, balance }) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const resultInput = {\n      id: shortid.generate(),\n      name: e.target.querySelector('input[name=\"name\"]').value,\n      amount: Number(e.target.querySelector('input[name=\"amount\"]').value),\n    };\n\n    if (checkInputExpense(resultInput.amount, balance)) addExpense(resultInput);\n\n    e.target.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label customStyles={labelStyles}>\n        Enter expense name\n        <Input type=\"text\" name=\"name\" />\n      </Label>\n      <Label customStyles={labelStyles}>\n        Enter expense amount\n        <Input type=\"number\" name=\"amount\" />\n      </Label>\n\n      <Button label=\"Add\" type=\"submit\" />\n    </Form>\n  );\n};\n\nExpenseForm.propTypes = {\n  addExpense: PropTypes.func.isRequired,\n  balance: PropTypes.number.isRequired,\n};\n\nexport default ExpenseForm;\n","import { createSelector } from \"reselect\";\n\nexport const getBudget = state => state.store.budget;\nexport const getExpenses = state => state.store.expenses;\n\nexport const calculateTotalExpenses = createSelector(getExpenses, expenses =>\n  expenses.reduce((total, expense) => total + expense.amount, 0)\n);\nexport const calculateBalance = createSelector(\n  [getBudget, calculateTotalExpenses],\n  (budget, expenses) => budget - expenses\n);\n","import { connect } from \"react-redux\";\nimport * as actions from \"../redux/actions/actions\";\nimport ExpenseForm from \"./ExpenseForm\";\nimport * as selectors from \"../redux/selectors/selectors\";\n\nconst mapStateToProps = state => ({\n  balance: selectors.calculateBalance(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addExpense: value => dispatch(actions.addExpense(value))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpenseForm);\n","import React from 'react';\nimport styled from 'styled-components';\nimport Button from '../shared/Button';\nimport { connect } from 'react-redux';\nimport * as actions from '../redux/actions/actions';\nimport PropTypes from 'prop-types';\n\nconst Table = styled.table`\n  border-collapse: collapse;\n  text-align: center;\n  width: 100%;\n\n  tr {\n    border-bottom: 1px solid #212121;\n  }\n\n  td,\n  th {\n    padding-top: 8px;\n    padding-bottom: 8px;\n  }\n`;\n\nconst ExpensesTable = ({ items = [], removeExpense }) => (\n  <Table>\n    <thead>\n      <tr>\n        <th>Expense name</th>\n        <th>Expense amount</th>\n        <th />\n      </tr>\n    </thead>\n    <tbody>\n      {items.map(({ id, name, amount }) => (\n        <tr key={id}>\n          <td>{name}</td>\n          <td>{amount}</td>\n          <td>\n            <Button label=\"Delete\" onClick={() => removeExpense(id)} />\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </Table>\n);\n\nconst mapStateToProps = state => ({\n  items: state.store.expenses,\n});\n\nconst mapDispatchProps = dispatch => ({\n  removeExpense: value => dispatch(actions.removeExpense(value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchProps)(ExpensesTable);\n\nTable.propTypes = {\n  removeExpense: PropTypes.func,\n  items: PropTypes.arrayOf(PropTypes.any),\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  text-align: center;\n  padding: 8px 24px;\n  color: ${props => (props.isPositive ? \"#388E3C\" : \"#D32F2F\")};\n  user-select: none;\n`;\n\nconst Label = styled.p`\n  margin-top: 0;\n  margin-bottom: 8px;\n  text-transform: uppercase;\n  font-weight: 500;\n  font-size: 24px;\n`;\n\nconst Value = styled.p`\n  margin-top: 0;\n  margin-bottom: 0;\n  font-size: 48px;\n`;\n\nconst Stat = ({ label, value, isPositive }) => (\n  <Container isPositive={isPositive}>\n    <Label>{label}</Label>\n    <Value>{value}&nbsp;&#x24;</Value>\n  </Container>\n);\n\nexport default Stat;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Stat from '../Stat/Stat';\n\nconst Container = styled.section`\n  display: inline-flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Values = ({ budget, expenses, balance }) => (\n  <Container>\n    <Stat label=\"Budget\" value={budget} isPositive />\n    <Stat label=\"Expenses\" value={expenses} isPositive={false} />\n    <Stat label=\"Balance\" value={balance} isPositive={balance >= 0} />\n  </Container>\n);\n\nexport default Values;\n\nValues.propTypes = {\n  budget: PropTypes.number.isRequired,\n  balance: PropTypes.number.isRequired,\n  expenses: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { connect } from 'react-redux';\nimport BudgetForm from './components/BudgetForm/BudgetFormContainer';\nimport ExpenseForm from './components/ExpenseFrom/ExpenseFormContainer';\nimport ExpensesTable from './components/ExpensesTable/ExpensesTable';\nimport Values from './components/Values/Values';\nimport * as actions from './components/redux/actions/actions';\nimport * as selectors from './components/redux/selectors/selectors';\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: 340px 1fr;\n  align-items: flex-start;\n  grid-gap: 24px;\n  max-width: 960px;\n  padding-left: 16px;\n  padding-right: 16px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst App = ({ budget, expenses, removeExpense, totalExpenses, balance }) => (\n  <Container>\n    <BudgetForm />\n    <Values budget={budget} expenses={totalExpenses} balance={balance} />\n    <ExpenseForm />\n    {expenses.length > 0 && (\n      <ExpensesTable items={expenses} onRemove={removeExpense} />\n    )}\n    <ToastContainer />\n  </Container>\n);\n\nconst mapStateToProps = state => ({\n  budget: selectors.getBudget(state),\n  expenses: selectors.getExpenses(state),\n  totalExpenses: selectors.calculateTotalExpenses(state),\n  balance: selectors.calculateBalance(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  removeExpense: id => dispatch(actions.removeExpense(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\nApp.propTypes = {\n  budget: PropTypes.number.isRequired,\n  expenses: PropTypes.arrayOf(PropTypes.any).isRequired,\n  removeExpense: PropTypes.func.isRequired,\n  totalExpenses: PropTypes.number.isRequired,\n  balance: PropTypes.number.isRequired,\n};\n","import { combineReducers } from \"redux\";\nimport { Type } from \"../actions/actions\";\n\nconst budget = (state = 0, action) => {\n  switch (action.type) {\n    case Type.ADD_BUDGET:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nconst expenses = (state = [], action) => {\n  switch (action.type) {\n    case Type.ADD_EXPENSE:\n      return [...state, action.payload];\n\n    case Type.REMOVE_EXPENSE:\n      return state.filter(item => item.id !== action.payload);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  budget,\n  expenses\n});\n","import { createStore, combineReducers } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport allReducers from \"../reducers/reducer\";\n\nconst rootReducer = combineReducers({ store: allReducers });\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './components/redux/store/store';\nimport './styles.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}